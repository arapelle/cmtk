
macro(fatal_ifdef msg)
foreach(var IN ITEMS ${ARGN})
  if(DEFINED ${var})
    message(FATAL_ERROR "${msg}")
  endif()
endforeach()
endmacro()

macro(fatal_ifndef msg)
  foreach(var IN ITEMS ${ARGN})
    if(NOT DEFINED ${var})
      message(FATAL_ERROR "${msg}")
    endif()
  endforeach()
endmacro()

function(fatal_if_none_is_def msg)
  foreach(var IN ITEMS ${ARGN})
    if(DEFINED ${var})
      return()
    endif()
  endforeach()
  message(FATAL_ERROR "${msg}")
endfunction()

macro(set_ifndef var value)
  if(NOT DEFINED ${var})
    set(${var} ${value})
  endif()
endmacro()

macro(set_iftest var)
  set(lists "IF;THEN;ELSE")
  cmake_parse_arguments("ARG" "" "" "${lists}" ${ARGN})
  fatal_ifndef("IF is required and contains the test expression." ARG_IF)
  fatal_ifndef("THEN is required and contains the value if the test expression is valid" ARG_THEN)
  if(${ARG_IF})
    set(${var} ${ARG_THEN})
  elseif(DEFINED ARG_ELSE)
    set(${var} ${ARG_ELSE})
  endif()
endmacro()

function(option_ifpvndef destvar msg initial pvar)
  if(NOT DEFINED ${pvar} OR "${${pvar}}" STREQUAL "UNDEFINED")
    option(${destvar} "${msg}" ${initial})
  else()
    set(${destvar} ${${pvar}} PARENT_SCOPE)
  endif()
endfunction()

function(trioption varname msg initial)
  set(${varname} "${initial}" CACHE STRING "${message}")
  set_property(CACHE ${varname} PROPERTY STRINGS "ON" "OFF" "UNDEFINED")
endfunction()


macro(to_var_name str output_var)
  string(REGEX REPLACE "[\ -]" "_" ${output_var} ${str})
endmacro()

macro(to_lower_var_name str output_var)
  to_var_name(${str} ${output_var})
  string(TOLOWER ${${output_var}} ${output_var})
endmacro()

macro(to_upper_var_name str output_var)
  to_var_name(${str} ${output_var})
  string(TOUPPER ${${output_var}} ${output_var})
endmacro()
