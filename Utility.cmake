
macro(fatal_ifdef msg)
  foreach(var IN ITEMS ${ARGN})
    if(DEFINED ${var})
      message(FATAL_ERROR "${msg}")
    endif()
  endforeach()
endmacro()

macro(fatal_ifndef msg)
  foreach(var IN ITEMS ${ARGN})
    if(NOT DEFINED ${var})
      message(FATAL_ERROR "${msg}")
    endif()
  endforeach()
endmacro()

function(fatal_if_none_is_def msg)
  foreach(var IN ITEMS ${ARGN})
    if(DEFINED ${var})
      return()
    endif()
  endforeach()
  message(FATAL_ERROR "${msg}")
endfunction()

function(fatal_if_none_of var_name)
  if(NOT DEFINED "${var_name}")
      message(FATAL_ERROR "Variable ${var_name} is not defined.")
  endif()
  set(expected_values ${ARGN})
  list(FIND expected_values "${${var_name}}" index)
  if(index EQUAL -1)
      message(FATAL_ERROR "${var_name} has an unexpected value: ${${var_name}}. (expected: ${ARGN})")
  endif()
endfunction()


macro(set_ifndef var_name value)
  if(NOT DEFINED ${var_name})
    set(${var_name} ${value})
  endif()
endmacro()

macro(set_iftest var)
  set(lists "IF;THEN;ELSE")
  cmake_parse_arguments("ARG" "" "" "${lists}" ${ARGN})
  fatal_ifndef("IF is required and contains the test expression." ARG_IF)
  fatal_ifndef("THEN is required and contains the value if the test expression is valid" ARG_THEN)
  if(${ARG_IF})
    set(${var} ${ARG_THEN})
  elseif(DEFINED ARG_ELSE)
    set(${var} ${ARG_ELSE})
  endif()
endmacro()

function(list_nth_or_default list_var index default_value out_var)
    list(LENGTH ${list_var} list_size)
    if(index LESS list_size)
        list(GET ${list_var} ${index} value)
        set(${out_var} ${value} PARENT_SCOPE)
    else()
        set(${out_var} ${default_value} PARENT_SCOPE)
    endif()
endfunction()


macro(make_lower_c_identifier str return_var)
  string(MAKE_C_IDENTIFIER "${str}" ${return_var})
  string(TOLOWER "${${return_var}}" ${return_var})
endmacro()

macro(make_upper_c_identifier str return_var)
  string(MAKE_C_IDENTIFIER "${str}" ${return_var})
  string(TOUPPER "${${return_var}}" ${return_var})
endmacro()
